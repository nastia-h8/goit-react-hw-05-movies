{"version":3,"file":"static/js/313.020b17b3.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  color: inherit;\n  border-radius: ${p => p.theme.radii.sm};\n  overflow: hidden;\n\n  transition: all ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    transform: scale(0.98);\n    box-shadow: ${p => p.theme.shadow};\n  }\n\n  svg {\n    fill: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  height: 100%;\n  overflow: hidden;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 16px 4px;\n  min-height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n`;\n\nexport const StyledSwiper = styled(Swiper)`\n  width: 100%;\n  height: 100%;\n  padding-bottom: 16px !important;\n`;\n\nexport const StyledSlide = styled(SwiperSlide)`\n  padding: 8px;\n  text-align: center;\n  font-size: 18px;\n  background: #fff;\n\n  /* Center slide text vertically */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Mousewheel, Pagination } from 'swiper/modules';\nimport {\n  StyledLink,\n  Wrapper,\n  Title,\n  ImgWrapper,\n  Img,\n  StyledSwiper,\n  StyledSlide,\n} from './MovieList.styled';\nimport placeholder from '../../images/placeholder.jpg';\n\nfunction MovieList({ movies, path = '' }) {\n  const location = useLocation();\n  return (\n    <StyledSwiper\n      spaceBetween={8}\n      modules={[Mousewheel, Pagination]}\n      slidesPerView={5}\n      mousewheel={true}\n      pagination={{\n        clickable: true,\n      }}\n      breakpoints={{\n        280: {\n          slidesPerView: 1,\n          spaceBetween: 8,\n        },\n        320: {\n          slidesPerView: 2,\n          spaceBetween: 8,\n        },\n        768: {\n          slidesPerView: 4,\n        },\n        1024: {\n          slidesPerView: 5,\n        },\n      }}\n    >\n      {movies.map(({ id, title, poster_path }) => {\n        const poaterPath = poster_path\n          ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n          : `${placeholder}`;\n\n        const movieTitle =\n          title.length < 50 ? title : `${title.slice(0, 50)}...`;\n        return (\n          <StyledSlide key={id}>\n            <StyledLink to={`${path}${id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <Img src={poaterPath} alt={title} />\n              </ImgWrapper>\n              <Wrapper>\n                <Title>{movieTitle}</Title>\n              </Wrapper>\n            </StyledLink>\n          </StyledSlide>\n        );\n      })}\n    </StyledSwiper>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 24px;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n`;\n","import { useEffect, useState } from 'react';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader';\nimport { Container, Title } from './Home.styled';\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n\n        const fetchedMovies = await moviesAPI.getTrendingMovies(signal);\n        setTrendingMovies(fetchedMovies);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <Container>\n      {<Title>Trending today</Title>}\n      {isLoading && <Loader />}\n      {error && <p>Oops, something went wrong...Try again later!</p>}\n      {trendingMovies.length > 0 && (\n        <MovieList movies={trendingMovies} path=\"movies/\" />\n      )}\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get('/trending/movie/day', {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n\nexport async function getMovies(query, signal, page) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=${page}`,\n    {\n      ...options,\n      signal,\n    }\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}`, {\n    ...options,\n    signal,\n  });\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getMovieCast(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    ...options,\n    signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId, signal) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n"],"names":["StyledLink","styled","Link","p","theme","radii","sm","transition","shadow","colors","accent","ImgWrapper","Img","Wrapper","Title","StyledSwiper","Swiper","StyledSlide","SwiperSlide","movies","path","location","useLocation","spaceBetween","modules","Mousewheel","Pagination","slidesPerView","mousewheel","pagination","clickable","breakpoints","map","id","title","poster_path","poaterPath","placeholder","movieTitle","length","slice","to","state","from","src","alt","Container","Home","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","controller","AbortController","signal","fetchTrendingMovies","moviesAPI","fetchedMovies","code","abort","Loader","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","query","page","getMovieDetails","movieId","console","log","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}