{"version":3,"file":"static/js/81.c54d30b0.chunk.js","mappings":"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","sources":["components/Message/Message.styled.js","components/Message/ErrorMessage.jsx","components/Message/InfoMessage.jsx","components/ReviewsList/ReviewsList.styled.js","components/ShowMoreContent/ShowMoreContent.styled.js","components/ShowMoreContent/ShowMoreContent.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews.jsx","helpers/convertDate.js","helpers/smoothScroll.js","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.span`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { Text } from './Message.styled';\n\nfunction ErrorMessage() {\n  return <Text>Oops, something went wrong...Try again later!</Text>;\n}\n\nexport default ErrorMessage;\n","import PropTypes from 'prop-types';\n\nfunction InfoMessage({ children }) {\n  return <p>{children}</p>;\n}\n\nexport default InfoMessage;\n\nInfoMessage.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(3)};\n\n  li {\n    padding: 20px;\n    max-width: 650px;\n    overflow: hidden;\n    box-shadow: ${p => p.theme.shadow};\n    border-radius: ${p => p.theme.radii.sm};\n  }\n`;\n\nexport const Author = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 10px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.19;\n  letter-spacing: 0.03em;\n\n  span {\n    font-weight: 500;\n  }\n`;\n\nexport const Avatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: ${p => p.theme.radii.circle};\n`;\n\nexport const AuthorInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const InfoDate = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nexport const InfoRating = styled.span`\n  width: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${p => p.theme.colors.light};\n\n  background-color: ${p => p.theme.colors.bgc};\n\n  svg {\n    fill: currentColor;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 0;\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  transition: all all ${p => p.theme.transition};\n`;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 0;\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  transition: all all ${p => p.theme.transition};\n`;\n","import { useState } from 'react';\nimport { Text, Button } from './ShowMoreContent.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ShowMoreContent({ content }) {\n  const [isShowMore, setIsShowMore] = useState(false);\n\n  const handleShowMore = () => setIsShowMore(p => !p);\n\n  const slicedContent = `${content.slice(0, 300)}...`;\n\n  return (\n    <>\n      <Text>{isShowMore ? content : slicedContent}</Text>\n      <Button type=\"button\" onClick={handleShowMore}>\n        {isShowMore ? 'Show less' : 'Show more'}\n      </Button>\n    </>\n  );\n}\n\nShowMoreContent.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport {\n  List,\n  Author,\n  Text,\n  InfoDate,\n  Avatar,\n  InfoRating,\n  AuthorInfo,\n} from './ReviewsList.styled';\nimport ShowMoreContent from 'components/ShowMoreContent/ShowMoreContent';\nimport placeholder from '../../images/user-placeholder.jpg';\nimport { AiFillStar } from 'react-icons/ai';\nimport { convertDate } from 'helpers/convertDate';\nimport { smoothScroll } from 'helpers/smoothScroll';\nimport { useEffect } from 'react';\n\nfunction ReviewsList({ reviews }) {\n  useEffect(() => {\n    smoothScroll('scrollToReviewList');\n  }, []);\n\n  return (\n    <List name=\"scrollToReviewList\">\n      {reviews.map(\n        ({\n          id,\n          author = 'Unknown author',\n          content,\n          author_details,\n          created_at,\n        }) => {\n          const isContentShort = content?.length < 300;\n\n          const rating =\n            Number(author_details?.rating) < 10\n              ? `${author_details.rating}.0`\n              : author_details.rating;\n\n          const avatarPath = author_details.avatar_path\n            ? `https://image.tmdb.org/t/p/original/${author_details.avatar_path}`\n            : placeholder;\n\n          const formattedDate = convertDate(created_at);\n          return (\n            <li key={id}>\n              <Author>\n                <Avatar src={avatarPath} alt={author_details.name} />\n                <AuthorInfo>\n                  <p>\n                    <span>A review by: </span>\n                    {author}\n                  </p>\n                  {author_details.rating && (\n                    <InfoRating>\n                      <AiFillStar />\n                      {rating}\n                    </InfoRating>\n                  )}\n                  {created_at && (\n                    <InfoDate>\n                      <span>Written on: </span>\n                      {formattedDate}\n                    </InfoDate>\n                  )}\n                </AuthorInfo>\n              </Author>\n              {isContentShort ? (\n                <Text>{content}</Text>\n              ) : (\n                <ShowMoreContent content={content} />\n              )}\n            </li>\n          );\n        }\n      )}\n    </List>\n  );\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport ReviewsList from './ReviewsList/ReviewsList';\nimport Loader from './Loader';\nimport ErrorMessage from './Message/ErrorMessage';\nimport InfoMessage from './Message/InfoMessage';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchMovieReviews = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedReviews = await moviesAPI.getMovieReviews(movieId, signal);\n        setReviews(fetchedReviews);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieReviews(movieId);\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage />}\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        <InfoMessage>No reviews yet...</InfoMessage>\n      )}\n    </>\n  );\n}\n","const namesOfMonth = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport function convertDate(date) {\n  const newDate = new Date(date);\n  const day = newDate.getDate();\n  const month = namesOfMonth[newDate.getMonth() + 1];\n  const year = newDate.getFullYear();\n\n  return `${month} ${day.toString().padStart(2, '0')}, ${year}`;\n}\n","import * as Scroll from 'react-scroll';\n\nexport function smoothScroll(element) {\n  const scroll = Scroll.scroller;\n  scroll.scrollTo(element, {\n    duration: 1000,\n    smooth: true,\n  });\n}\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get('/trending/movie/day', {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n\nexport async function getMovies(query, signal, page) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=${page}`,\n    {\n      ...options,\n      signal,\n    }\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}`, {\n    ...options,\n    signal,\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    ...options,\n    signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId, signal) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n"],"names":["Text","styled","children","List","p","theme","spacing","shadow","radii","sm","Author","Avatar","circle","AuthorInfo","InfoDate","InfoRating","colors","light","bgc","transition","Button","ShowMoreContent","content","useState","isShowMore","setIsShowMore","slicedContent","slice","type","onClick","reviews","useEffect","smoothScroll","name","map","id","author","author_details","created_at","isContentShort","length","rating","Number","avatarPath","avatar_path","placeholder","formattedDate","convertDate","src","alt","Reviews","movieId","useParams","setReviews","isLoading","setIsLoading","error","setError","controller","AbortController","signal","fetchMovieReviews","moviesAPI","fetchedReviews","code","abort","Loader","ErrorMessage","InfoMessage","namesOfMonth","date","newDate","Date","day","getDate","month","getMonth","year","getFullYear","toString","padStart","element","Scroll","scrollTo","duration","smooth","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","query","page","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}