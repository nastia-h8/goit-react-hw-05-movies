{"version":3,"file":"static/js/105.98f9871f.chunk.js","mappings":"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","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","components/Cast.jsx","components/Message/Message.styled.js","components/Message/ErrorMessage.jsx","components/Message/InfoMessage.jsx","helpers/smoothScroll.js","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: ${p => p.theme.spacing(3)};\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  width: 200px;\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 50px;\n  font-size: 12px;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  color: ${p => p.theme.colors.light};\n  background-color: ${p => p.theme.colors.bgc};\n  transform: translateY(-100%);\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 8px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport placeholder from '../../images/placeholder.jpg';\nimport { List, Item, Overlay, Name } from './CastList.styled';\nimport { useEffect } from 'react';\nimport { smoothScroll } from 'helpers/smoothScroll';\n\nfunction CastList({ cast }) {\n  useEffect(() => {\n    smoothScroll('scrollToCastList');\n  }, []);\n\n  return (\n    <List name=\"scrollToCastList\">\n      {cast.map(({ id, name, character, profile_path }) => {\n        const profilePath = profile_path\n          ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n          : placeholder;\n\n        return (\n          <Item key={id}>\n            <img src={profilePath} alt={name} width=\"200\" />\n            <Overlay>\n              <Name>{name}</Name>\n              <p>{character}</p>\n            </Overlay>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default CastList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport CastList from './CastList/CastList';\nimport Loader from './Loader';\nimport ErrorMessage from './Message/ErrorMessage';\nimport InfoMessage from './Message/InfoMessage';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchMovieCast = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedCast = await moviesAPI.getMovieCast(movieId, signal);\n        setCast(fetchedCast);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast(movieId);\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <CastList cast={cast} />\n      ) : (\n        <InfoMessage>No cast added...</InfoMessage>\n      )}\n\n      {isLoading && <Loader />}\n      {error && <ErrorMessage />}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Text = styled.span`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { Text } from './Message.styled';\n\nfunction ErrorMessage() {\n  return <Text>Oops, something went wrong...Try again later!</Text>;\n}\n\nexport default ErrorMessage;\n","import PropTypes from 'prop-types';\n\nfunction InfoMessage({ children }) {\n  return <p>{children}</p>;\n}\n\nexport default InfoMessage;\n\nInfoMessage.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import * as Scroll from 'react-scroll';\n\nexport function smoothScroll(element) {\n  const scroll = Scroll.scroller;\n  scroll.scrollTo(element, {\n    duration: 1000,\n    smooth: true,\n  });\n}\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get('/trending/movie/day', {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n\nexport async function getMovies(query, signal, page) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=${page}`,\n    {\n      ...options,\n      signal,\n    }\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}`, {\n    ...options,\n    signal,\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    ...options,\n    signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId, signal) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n"],"names":["List","styled","p","theme","spacing","Item","Overlay","colors","light","bgc","Name","cast","useEffect","smoothScroll","name","map","id","character","profile_path","profilePath","placeholder","src","alt","width","Cast","movieId","useParams","useState","setCast","isLoading","setIsLoading","error","setError","controller","AbortController","signal","fetchMovieCast","moviesAPI","fetchedCast","code","abort","length","InfoMessage","Loader","ErrorMessage","Text","children","element","Scroll","scrollTo","duration","smooth","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","query","page","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}