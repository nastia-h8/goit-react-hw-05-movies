{"version":3,"file":"static/js/413.af5c9fec.chunk.js","mappings":"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","sources":["components/Message/Message.styled.js","components/Message/ErrorMessage.jsx","components/Message/InfoMessage.jsx","components/MovieInfoCard/MovieInfoCard.styled.js","components/MovieInfoCard/MovieInfoCard.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.span`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { Text } from './Message.styled';\n\nfunction ErrorMessage() {\n  return <Text>Oops, something went wrong...Try again later!</Text>;\n}\n\nexport default ErrorMessage;\n","import PropTypes from 'prop-types';\n\nfunction InfoMessage({ children }) {\n  return <p>{children}</p>;\n}\n\nexport default InfoMessage;\n\nInfoMessage.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(6)};\n  padding: 32px 16px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n`;\n\nexport const ImgWrapper = styled.div`\n  width: 250px;\n  border-radius: ${p => p.theme.radii.sm};\n  overflow: hidden;\n`;\n\nexport const InfoWrapper = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  flex-grow: 1;\n  text-align: left;\n  color: ${p => p.theme.colors.light};\n`;\n\nexport const Label = styled.span`\n  font-weight: 700;\n`;\n\nexport const Overview = styled.span`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport placeholder from '../../images/placeholder.jpg';\nimport InfoMessage from '../Message/InfoMessage';\nimport {\n  Container,\n  ImgWrapper,\n  InfoWrapper,\n  Label,\n  Overview,\n} from './MovieInfoCard.styled';\n\nfunction MovieInfoCard({ movie }) {\n  const {\n    poster_path,\n    backdrop_path,\n    title,\n    overview,\n    genres,\n    vote_average,\n    release_date,\n  } = movie;\n\n  const backdrop = backdrop_path\n    ? `linear-gradient(rgba(47,48,58,0.8), rgba(47,48,58,0.8)), url(https://image.tmdb.org/t/p/original/${backdrop_path})`\n    : 'linear-gradient(rgba(47,48,58,0.8), rgba(47,48,58,0.8))';\n\n  const genresList =\n    genres.length > 0\n      ? genres.map(genre => genre.name).join(', ')\n      : 'No genres provided...';\n\n  const score = vote_average ? Math.round((vote_average / 10) * 100) + '%' : 0;\n  const releaseYear = release_date ? `(${release_date.split('-')[0]})` : '';\n\n  return (\n    <div\n      style={{\n        backgroundImage: backdrop,\n        backgroundSize: 'cover',\n      }}\n    >\n      <Container>\n        <ImgWrapper>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : `${placeholder}`\n            }\n            alt={title}\n            width=\"250\"\n          />\n        </ImgWrapper>\n        <InfoWrapper>\n          <h2>\n            {title}&nbsp;\n            {releaseYear}\n          </h2>\n\n          <div>\n            <Label>Score: </Label>\n            {score}\n          </div>\n\n          <div>\n            <Overview>Overview</Overview>\n            {overview ? (\n              <p>{overview}</p>\n            ) : (\n              <InfoMessage>No overview yet...</InfoMessage>\n            )}\n          </div>\n\n          <div>\n            <Label>Genres: </Label>\n            <span>{genresList}</span>\n          </div>\n        </InfoWrapper>\n      </Container>\n    </div>\n  );\n}\n\nMovieInfoCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object).isRequired,\n    vote_average: PropTypes.number.isRequired,\n    release_date: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfoCard;\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  margin-bottom: 12px;\n`;\n\nexport const StyledBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.spacing(1)};\n  width: 100px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  text-decoration: none;\n  color: inherit;\n  transition: color ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.accent};\n\n    svg {\n      fill: currentColor;\n    }\n  }\n`;\n\nexport const AddInfoWrapper = styled.div`\n  padding: 16px 20px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  text-align: left;\n\n  h3 {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  gap: ${p => p.theme.spacing(3)};\n  align-items: center;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  padding: 10px 16px;\n  border-radius: ${p => p.theme.radii.sm};\n  text-decoration: none;\n  font-weight: 700;\n  color: inherit;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  border: 1px solid ${p => p.theme.colors.accent};\n  transition: all ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.light};\n    background-color: ${p => p.theme.colors.accent};\n  }\n\n  &.active {\n    color: ${p => p.theme.colors.light};\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { AiFillLeftSquare } from 'react-icons/ai';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport MovieInfoCard from 'components/MovieInfoCard/MovieInfoCard';\nimport Message from 'components/Message/ErrorMessage';\nimport Loader from 'components/Loader';\nimport {\n  AddInfoWrapper,\n  StyledLink,\n  StyledBackLink,\n  List,\n  Container,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchMovieDetails = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedMovieDetails = await moviesAPI.getMovieDetails(\n          movieId,\n          signal\n        );\n        setMovie(fetchedMovieDetails);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails(movieId);\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && (\n        <Message>Oops, something went wrong...Try again later!</Message>\n      )}\n\n      <Container>\n        <StyledBackLink to={backLinkRef.current}>\n          <AiFillLeftSquare size={20} /> Go back\n        </StyledBackLink>\n      </Container>\n\n      {movie && (\n        <>\n          <MovieInfoCard movie={movie} />\n\n          <AddInfoWrapper>\n            <h3>Additional Information</h3>\n            <List>\n              <li>\n                <StyledLink to=\"cast\">Cast</StyledLink>\n              </li>\n              <li>\n                <StyledLink to=\"reviews\">Reviews</StyledLink>\n              </li>\n            </List>\n\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </AddInfoWrapper>\n        </>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get('/trending/movie/day', {\n    ...options,\n    signal: signal,\n  });\n  return response.data.results;\n}\n\nexport async function getMovies(query, signal) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=1`,\n    {\n      ...options,\n      signal: signal,\n    }\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}`, {\n    ...options,\n    signal: signal,\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    ...options,\n    signal: signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId, signal) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, {\n    ...options,\n    signal: signal,\n  });\n  return response.data.results;\n}\n"],"names":["Text","styled","children","Container","p","theme","spacing","ImgWrapper","radii","sm","InfoWrapper","colors","light","Label","Overview","movie","poster_path","backdrop_path","title","overview","genres","vote_average","release_date","backdrop","genresList","length","map","genre","name","join","score","Math","round","releaseYear","split","style","backgroundImage","backgroundSize","src","placeholder","alt","width","InfoMessage","StyledBackLink","Link","transition","accent","AddInfoWrapper","List","StyledLink","NavLink","MovieDetails","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","location","useLocation","backLinkRef","useRef","state","from","useEffect","controller","AbortController","signal","fetchMovieDetails","moviesAPI","fetchedMovieDetails","code","abort","Loader","to","current","size","Suspense","fallback","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}