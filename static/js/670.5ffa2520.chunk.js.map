{"version":3,"file":"static/js/670.5ffa2520.chunk.js","mappings":"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","sources":["components/Message/Message.styled.js","components/Message/ErrorMessage.jsx","helpers/convertDate.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.styled.js","components/MovieSearchList/MovieSearchList.styled.js","components/MovieSearchList/MovieSearchList.jsx","components/ScrollToTop/ScrollToTop.styled.js","components/ScrollToTop/ScrollToTop.jsx","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.span`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { Text } from './Message.styled';\n\nfunction ErrorMessage() {\n  return <Text>Oops, something went wrong...Try again later!</Text>;\n}\n\nexport default ErrorMessage;\n","const namesOfMonth = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport function convertDate(date) {\n  const newDate = new Date(date);\n  const day = newDate.getDate();\n  const month = namesOfMonth[newDate.getMonth() + 1];\n  const year = newDate.getFullYear();\n\n  return `${month} ${day.toString().padStart(2, '0')}, ${year}`;\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  padding: 4px 8px;\n  font: inherit;\n  font-size: 20px;\n  color: #423e3e;\n  border: none;\n  outline: none;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  outline: none;\n  color: ${p => p.theme.colors.secondary};\n  cursor: pointer;\n  transition: all ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { Form, Input, Button } from './Searchbar.styled';\n\nfunction Searchbar({ onSubmit, isLoading }) {\n  const [query, setQuery] = useState('');\n\n  const handleInput = e => setQuery(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query) {\n      toast('Please enter something to search...', { icon: 'ðŸŸ¡' });\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          value={query}\n          onChange={handleInput}\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <Button type=\"submit\" disabled={isLoading}>\n          <AiOutlineSearch size={20} />\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Searchbar;\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  margin: 0 auto;\n  margin-top: 24px;\n  padding: 8px 16px;\n  min-width: 160px;\n\n  border: 0;\n  border-radius: ${p => p.theme.radii.sm};\n\n  transition: all ${p => p.theme.transition};\n  color: ${p => p.theme.colors.light};\n  background-color: ${p => p.theme.colors.accent};\n  cursor: pointer;\n\n  text-align: center;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 1.33;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    box-shadow: ${p => p.theme.shadow};\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: ${p => p.theme.spacing(4)};\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  min-height: 400px;\n  position: relative;\n  border-radius: ${p => p.theme.radii.sm};\n  box-shadow: ${p => p.theme.shadow};\n  overflow: hidden;\n  transition: all ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    transform: scale(0.98);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  color: inherit;\n  border-radius: ${p => p.theme.radii.sm};\n  overflow: hidden;\n\n  svg {\n    fill: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  height: 320px;\n  width: 100%;\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const InfoWrapper = styled.div`\n  padding: 8px;\n  width: 100%;\n  min-height: 80px;\n  /* justify-content: start; */\n`;\n\nexport const Title = styled.h2`\n  text-align: left;\n  margin-bottom: 8px;\n  font-size: 16px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n`;\n\nexport const Release = styled.p`\n  text-align: left;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  color: ${p => p.theme.colors.secondary};\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  List,\n  StyledLink,\n  Item,\n  InfoWrapper,\n  Title,\n  ImgWrapper,\n  Img,\n  Release,\n} from './MovieSearchList.styled';\nimport placeholder from '../../images/placeholder.jpg';\nimport { convertDate } from 'helpers/convertDate';\n\nfunction MovieSearchList({ movies, path = '' }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path, release_date }) => {\n        const movieTitle =\n          title.length < 45 ? title : `${title.slice(0, 45)}...`;\n        const formattedDate = convertDate(release_date);\n        return (\n          <Item key={id}>\n            <StyledLink to={`${path}${id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <Img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                      : `${placeholder}`\n                  }\n                  alt={title}\n                />\n              </ImgWrapper>\n              <InfoWrapper>\n                <Title>{movieTitle}</Title>\n                <Release>{release_date && formattedDate}</Release>\n              </InfoWrapper>\n            </StyledLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nMovieSearchList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\n\nexport default MovieSearchList;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  z-index: 99;\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: ${p => p.theme.colors.light};\n  background-color: ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.radii.circle};\n  transition: all ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { BsArrowUpShort } from 'react-icons/bs';\nimport { Button } from './ScrollToTop.styled';\nimport * as Scroll from 'react-scroll';\n\nconst scroll = Scroll.animateScroll;\n\nexport function ScrollToTop() {\n  const [isBtnShow, setIsBtnShow] = useState(false);\n  const scrollToTop = () => scroll.scrollToTop();\n\n  useEffect(() => {\n    const onScrollBtnShow = () =>\n      window.scrollY > 100 ? setIsBtnShow(true) : setIsBtnShow(false);\n\n    window.addEventListener('scroll', onScrollBtnShow);\n\n    return () => {\n      window.removeEventListener('scroll', onScrollBtnShow);\n    };\n  }, []);\n\n  return (\n    isBtnShow && (\n      <Button onClick={scrollToTop}>\n        <BsArrowUpShort size={50} />\n      </Button>\n    )\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport Message from 'components/Message/ErrorMessage';\nimport Loader from 'components/Loader';\nimport { Button, Container } from './Movies.styled';\nimport MovieSearchList from 'components/MovieSearchList/MovieSearchList';\nimport { ScrollToTop } from 'components/ScrollToTop/ScrollToTop';\n\nvar Scroll = require('react-scroll');\nvar scroll = Scroll.animateScroll;\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryParams = searchParams.get('query') ?? '';\n  const handleLoadMore = () => {\n    setPage(p => p + 1);\n    scroll.scrollMore(350);\n  };\n\n  const onSubmit = query => {\n    if (queryParams === query) {\n      toast.error(`You are already searching - ${query}`);\n      return;\n    }\n    setSearchParams(query ? { query } : {});\n    setMovies([]);\n    setError(false);\n    setPage(1);\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchMovies = async (query, page) => {\n      try {\n        setIsLoading(true);\n\n        const normalizedQuery = query.toLowerCase().trim();\n        const { results: fetchedMovies, total_pages } =\n          await moviesAPI.getMovies(normalizedQuery, signal, page);\n\n        if (!fetchedMovies.length && normalizedQuery) {\n          toast.error('No movies found');\n          setSearchParams({});\n          return;\n        }\n\n        setMovies(m => [...m, ...fetchedMovies]);\n        setTotalPages(total_pages);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (queryParams) fetchMovies(queryParams, page);\n\n    return () => {\n      controller.abort();\n    };\n  }, [queryParams, setSearchParams, page]);\n\n  return (\n    <Container>\n      <Searchbar\n        onSubmit={onSubmit}\n        value={queryParams}\n        isLoading={isLoading}\n      />\n      {movies.length > 0 && (\n        <>\n          <MovieSearchList movies={movies} />\n          {page !== totalPages && (\n            <Button\n              type=\"button\"\n              onClick={handleLoadMore}\n              disabled={isLoading ? true : false}\n            >\n              Load more\n            </Button>\n          )}\n          <ScrollToTop />\n        </>\n      )}\n      {isLoading && <Loader />}\n      {error && (\n        <Message>Oops, something went wrong...Try again later!</Message>\n      )}\n    </Container>\n  );\n}\n\n// with onChange\n// export default function Movies() {\n//   const [movies, setMovies] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [searchParams, setSearchParams] = useSearchParams();\n\n//   const queryParams = searchParams.get('query') ?? '';\n\n//   const onChange = query => {\n//     setSearchParams(query ? { query } : {});\n//     setMovies([]);\n//     setError(false);\n//   };\n\n//   useEffect(() => {\n//     try {\n//       setIsLoading(true);\n\n//       const fetchMovies = async query => {\n//         const normalizedQuery = query.toLowerCase().trim();\n//         const fetchedMovies = await moviesAPI.getMovies(normalizedQuery);\n\n//         if (!fetchedMovies.length && normalizedQuery) {\n//           alert('No movies found');\n//           return;\n//         }\n\n//         setMovies(fetchedMovies);\n//       };\n\n//       if (queryParams) fetchMovies(queryParams);\n//     } catch (error) {\n//       setError(true);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   }, [queryParams]);\n\n//   return (\n//     <div>\n//       <Searchbar onChange={onChange} value={queryParams} />\n//       {movies.length > 0 && <MovieList movies={movies} />}\n//       {isLoading && <p>Loading...</p>}\n//       {error && (\n//         <Message>Oops, something went wrong...Try again later!</Message>\n//       )}\n//     </div>\n//   );\n// }\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get('/trending/movie/day', {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n\nexport async function getMovies(query, signal, page) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=${page}`,\n    {\n      ...options,\n      signal,\n    }\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}`, {\n    ...options,\n    signal,\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    ...options,\n    signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId, signal) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n"],"names":["Text","styled","namesOfMonth","convertDate","date","newDate","Date","day","getDate","month","getMonth","year","getFullYear","toString","padStart","Form","p","theme","colors","border","radii","sm","Input","Button","secondary","transition","accent","onSubmit","isLoading","useState","query","setQuery","e","preventDefault","toast","icon","name","type","value","onChange","target","placeholder","autoComplete","autoFocus","disabled","size","Container","light","shadow","List","spacing","Item","StyledLink","Link","ImgWrapper","Img","InfoWrapper","Title","Release","movies","path","location","useLocation","map","id","title","poster_path","release_date","movieTitle","length","slice","formattedDate","to","state","from","src","alt","circle","scroll","Scroll","ScrollToTop","isBtnShow","setIsBtnShow","useEffect","onScrollBtnShow","window","scrollY","addEventListener","removeEventListener","onClick","scrollToTop","require","animateScroll","Movies","setMovies","page","setPage","totalPages","setTotalPages","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","queryParams","get","controller","AbortController","signal","fetchMovies","normalizedQuery","toLowerCase","trim","moviesAPI","fetchedMovies","results","total_pages","m","code","abort","scrollMore","Loader","options","params","api_key","language","getTrendingMovies","axios","response","data","getMovies","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}