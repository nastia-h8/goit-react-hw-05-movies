{"version":3,"file":"static/js/603.53b95d5f.chunk.js","mappings":"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","sources":["components/Message/Message.styled.js","components/Message/ErrorMessage.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.span`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { Text } from './Message.styled';\n\nfunction ErrorMessage() {\n  return <Text>Oops, something went wrong...Try again later!</Text>;\n}\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.spacing(3)};\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  color: inherit;\n  transition: all ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  svg {\n    fill: ${p => p.theme.colors.accent};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, StyledLink } from './MovieList.styled';\nimport { AiFillPlayCircle } from 'react-icons/ai';\n\nfunction MovieList({ movies, path = '' }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <StyledLink to={`${path}${id}`} state={{ from: location }}>\n            <AiFillPlayCircle size={20} />\n            <span>{title}</span>\n          </StyledLink>\n        </li>\n      ))}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border: 1px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  padding: 4px 8px;\n  font: inherit;\n  font-size: 20px;\n  color: #423e3e;\n  border: none;\n  outline: none;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  outline: none;\n  color: ${p => p.theme.colors.secondary};\n  cursor: pointer;\n  transition: all ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { Form, Input, Button } from './Searchbar.styled';\n\nfunction Searchbar({ onSubmit, isLoading }) {\n  const [query, setQuery] = useState('');\n\n  const handleInput = e => setQuery(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query) {\n      toast('Please enter something to search...', { icon: 'ðŸŸ¡' });\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          value={query}\n          onChange={handleInput}\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <Button type=\"submit\" disabled={isLoading}>\n          <AiOutlineSearch size={20} />\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Searchbar;\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\nimport Message from 'components/Message/ErrorMessage';\nimport Loader from 'components/Loader';\nimport { Container } from './Movies.styled';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryParams = searchParams.get('query') ?? '';\n\n  const onSubmit = query => {\n    setSearchParams(query ? { query } : {});\n    setMovies([]);\n    setError(false);\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchMovies = async query => {\n      try {\n        setIsLoading(true);\n\n        const normalizedQuery = query.toLowerCase().trim();\n        const fetchedMovies = await moviesAPI.getMovies(\n          normalizedQuery,\n          signal\n        );\n\n        if (!fetchedMovies.length && normalizedQuery) {\n          toast.error('No movies found');\n          setSearchParams({});\n          return;\n        }\n        setMovies(fetchedMovies);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (queryParams) fetchMovies(queryParams);\n\n    return () => {\n      controller.abort();\n    };\n  }, [queryParams, movies.length, setSearchParams]);\n\n  return (\n    <Container>\n      <Searchbar\n        onSubmit={onSubmit}\n        value={queryParams}\n        isLoading={isLoading}\n      />\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {isLoading && <Loader />}\n      {error && (\n        <Message>Oops, something went wrong...Try again later!</Message>\n      )}\n    </Container>\n  );\n}\n\n// with onChange\n// export default function Movies() {\n//   const [movies, setMovies] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [searchParams, setSearchParams] = useSearchParams();\n\n//   const queryParams = searchParams.get('query') ?? '';\n\n//   const onChange = query => {\n//     setSearchParams(query ? { query } : {});\n//     setMovies([]);\n//     setError(false);\n//   };\n\n//   useEffect(() => {\n//     try {\n//       setIsLoading(true);\n\n//       const fetchMovies = async query => {\n//         const normalizedQuery = query.toLowerCase().trim();\n//         const fetchedMovies = await moviesAPI.getMovies(normalizedQuery);\n\n//         if (!fetchedMovies.length && normalizedQuery) {\n//           alert('No movies found');\n//           return;\n//         }\n\n//         setMovies(fetchedMovies);\n//       };\n\n//       if (queryParams) fetchMovies(queryParams);\n//     } catch (error) {\n//       setError(true);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   }, [queryParams]);\n\n//   return (\n//     <div>\n//       <Searchbar onChange={onChange} value={queryParams} />\n//       {movies.length > 0 && <MovieList movies={movies} />}\n//       {isLoading && <p>Loading...</p>}\n//       {error && (\n//         <Message>Oops, something went wrong...Try again later!</Message>\n//       )}\n//     </div>\n//   );\n// }\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get('/trending/movie/day', {\n    ...options,\n    signal: signal,\n  });\n  return response.data.results;\n}\n\nexport async function getMovies(query, signal) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=1`,\n    {\n      ...options,\n      signal: signal,\n    }\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}`, {\n    ...options,\n    signal: signal,\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    ...options,\n    signal: signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId, signal) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, {\n    ...options,\n    signal: signal,\n  });\n  return response.data.results;\n}\n"],"names":["Text","styled","List","p","theme","spacing","StyledLink","Link","transition","colors","accent","movies","path","location","useLocation","map","id","title","to","state","from","size","Form","border","radii","sm","Input","Button","secondary","onSubmit","isLoading","useState","query","setQuery","e","preventDefault","toast","icon","name","type","value","onChange","target","placeholder","autoComplete","autoFocus","disabled","Container","Movies","setMovies","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","controller","AbortController","signal","fetchMovies","normalizedQuery","toLowerCase","trim","moviesAPI","fetchedMovies","length","code","abort","MovieList","Loader","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}