{"version":3,"file":"static/js/488.cea713a1.chunk.js","mappings":"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","sources":["components/Message/Message.styled.js","components/Message/ErrorMessage.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.styled.js","pages/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.span`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { Text } from './Message.styled';\n\nfunction ErrorMessage() {\n  return <Text>Oops, something went wrong...Try again later!</Text>;\n}\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  text-decoration: none;\n  color: inherit;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n\n  &:hover,\n  &:focus {\n    color: rgba(0, 209, 255, 1);\n  }\n\n  svg {\n    fill: rgba(0, 209, 255, 1);\n  }\n\n  transition: all 250ms linear;\n\n  /* padding-left: 28px; */\n  /* &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    width: 20px;\n    height: 20px;\n    color: tomato;\n    background-color: tomato;\n  } */\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, StyledLink } from './MovieList.styled';\nimport { AiFillPlayCircle } from 'react-icons/ai';\n\nfunction MovieList({ movies, path = '' }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <StyledLink to={`${path}${id}`} state={{ from: location }}>\n            <AiFillPlayCircle size={20} />\n            <span>{title}</span>\n          </StyledLink>\n        </li>\n      ))}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n\n  border: 1px solid gray;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  padding: 4px 8px;\n\n  font: inherit;\n  font-size: 20px;\n  color: #423e3e;\n  border: none;\n  outline: none;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  transition: all 250ms linear;\n  cursor: pointer;\n  outline: none;\n  color: #757575;\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: rgba(0, 209, 255, 1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { Form, Input, Button } from './Searchbar.styled';\n\nfunction Searchbar({ onSubmit, isLoading }) {\n  const [query, setQuery] = useState('');\n\n  const handleInput = e => setQuery(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query) {\n      toast('Please enter something to search...', { icon: 'ðŸŸ¡' });\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          value={query}\n          onChange={handleInput}\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <Button type=\"submit\" disabled={isLoading}>\n          <AiOutlineSearch size={20} />\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Searchbar;\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\nimport Message from 'components/Message/ErrorMessage';\nimport Loader from 'components/Loader';\nimport { Container } from './Movies.styled';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryParams = searchParams.get('query') ?? '';\n\n  const onSubmit = query => {\n    setSearchParams(query ? { query } : {});\n    setMovies([]);\n    setError(false);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async query => {\n      try {\n        setIsLoading(true);\n\n        const normalizedQuery = query.toLowerCase().trim();\n        const fetchedMovies = await moviesAPI.getMovies(normalizedQuery);\n\n        if (!fetchedMovies.length && normalizedQuery) {\n          toast.error('No movies found');\n          return;\n        }\n        setMovies(fetchedMovies);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (queryParams) fetchMovies(queryParams);\n  }, [queryParams, movies.length]);\n\n  return (\n    <Container>\n      <Searchbar\n        onSubmit={onSubmit}\n        value={queryParams}\n        isLoading={isLoading}\n      />\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {isLoading && <Loader />}\n      {error && (\n        <Message>Oops, something went wrong...Try again later!</Message>\n      )}\n    </Container>\n  );\n}\n\n// with onChange\n// export default function Movies() {\n//   const [movies, setMovies] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [searchParams, setSearchParams] = useSearchParams();\n\n//   const queryParams = searchParams.get('query') ?? '';\n\n//   const onChange = query => {\n//     setSearchParams(query ? { query } : {});\n//     setMovies([]);\n//     setError(false);\n//   };\n\n//   useEffect(() => {\n//     try {\n//       setIsLoading(true);\n\n//       const fetchMovies = async query => {\n//         const normalizedQuery = query.toLowerCase().trim();\n//         const fetchedMovies = await moviesAPI.getMovies(normalizedQuery);\n\n//         if (!fetchedMovies.length && normalizedQuery) {\n//           alert('No movies found');\n//           return;\n//         }\n\n//         setMovies(fetchedMovies);\n//       };\n\n//       if (queryParams) fetchMovies(queryParams);\n//     } catch (error) {\n//       setError(true);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   }, [queryParams]);\n\n//   return (\n//     <div>\n//       <Searchbar onChange={onChange} value={queryParams} />\n//       {movies.length > 0 && <MovieList movies={movies} />}\n//       {isLoading && <p>Loading...</p>}\n//       {error && (\n//         <Message>Oops, something went wrong...Try again later!</Message>\n//       )}\n//     </div>\n//   );\n// }\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day', options);\n  // console.log(response.data);\n  return response.data.results;\n}\n\nexport async function getMovies(query) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=1`,\n    options\n  );\n\n  // console.log(response.data);\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}`, options);\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits`, options);\n\n  // console.log(response.data);\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, options);\n\n  // console.log(response.data);\n  return response.data.results;\n}\n"],"names":["Text","styled","List","StyledLink","Link","movies","path","location","useLocation","map","id","title","to","state","from","size","Form","Input","Button","onSubmit","isLoading","useState","query","setQuery","e","preventDefault","toast","icon","name","type","value","onChange","target","placeholder","autoComplete","autoFocus","disabled","Container","Movies","setMovies","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","fetchMovies","normalizedQuery","toLowerCase","trim","moviesAPI","fetchedMovies","length","MovieList","Loader","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","getMovieDetails","movieId","console","log","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}