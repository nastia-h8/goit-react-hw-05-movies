{"version":3,"file":"static/js/387.ec71b375.chunk.js","mappings":"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","sources":["components/Message/Message.styled.js","components/Message/ErrorMessage.jsx","helpers/convertDate.js","components/ScoreBar/ScoreBar.styled.js","components/ScoreBar/ScoreBar.jsx","components/MovieDetailsCard/MovieDetailsCard.styled.js","components/MovieDetailsCard/MovieDetailsCard.jsx","helpers/convertTime.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.span`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { Text } from './Message.styled';\n\nfunction ErrorMessage() {\n  return <Text>Oops, something went wrong...Try again later!</Text>;\n}\n\nexport default ErrorMessage;\n","const namesOfMonth = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport function convertDate(date) {\n  const newDate = new Date(date);\n  const day = newDate.getDate();\n  const month = namesOfMonth[newDate.getMonth() + 1];\n  const year = newDate.getFullYear();\n\n  return `${month} ${day.toString().padStart(2, '0')}, ${year}`;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.span`\n  width: 50px;\n`;\n\nexport const Filler = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n    background-color: #fff;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Label = styled.span`\n  color: black;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 100;\n`;\n","import { Container, Filler, Label } from './ScoreBar.styled';\n\nconst ScoreBar = ({ score }) => {\n  const percent = (score * 360) / 100;\n\n  return (\n    <Container>\n      <Filler\n        style={{\n          background: `conic-gradient(rgb(0, 122, 255) ${percent}deg, #c8c5c59e 0deg)`,\n        }}\n      >\n        <Label>{`${score}%`}</Label>\n      </Filler>\n    </Container>\n  );\n};\n\nexport default ScoreBar;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(6)};\n  padding: 32px 16px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n`;\n\nexport const InnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.spacing(1)};\n\n  svg {\n    fill: ${p => p.theme.colors.light};\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  width: 250px;\n  border-radius: ${p => p.theme.radii.sm};\n  overflow: hidden;\n`;\n\nexport const InfoWrapper = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  flex-grow: 1;\n  text-align: left;\n  color: ${p => p.theme.colors.light};\n\n  h2 {\n    font-size: 26px;\n  }\n`;\n\nexport const Overview = styled.span`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport placeholder from '../../images/placeholder.jpg';\nimport ScoreBar from 'components/ScoreBar/ScoreBar';\nimport { convertTime } from 'helpers/convertTime';\nimport { convertDate } from 'helpers/convertDate';\nimport { BiLinkExternal } from 'react-icons/bi';\nimport {\n  Container,\n  ImgWrapper,\n  InfoWrapper,\n  Overview,\n  InnerWrapper,\n} from './MovieDetailsCard.styled';\n\nfunction MovieInfoCard({ movie }) {\n  const {\n    poster_path,\n    backdrop_path,\n    title,\n    overview,\n    genres,\n    vote_average,\n    release_date,\n    runtime = 0,\n    tagline,\n    homepage,\n  } = movie;\n\n  const backdrop = backdrop_path\n    ? `linear-gradient(rgba(47,48,58,0.8), rgba(47,48,58,0.8)), url(https://image.tmdb.org/t/p/original/${backdrop_path})`\n    : 'linear-gradient(rgba(47,48,58,0.8), rgba(47,48,58,0.8))';\n\n  const genresList =\n    genres.length > 0\n      ? genres.map(genre => genre.name).join(', ')\n      : 'No genres provided';\n\n  const formattedYear = release_date ? `(${release_date.split('-')[0]})` : '';\n  const formattedDate = convertDate(release_date);\n\n  const movieOverview = overview ? overview : 'No overviews yet...';\n  const filmDuration = convertTime(runtime);\n  const score = vote_average ? Math.round((vote_average / 10) * 100) : 0;\n  return (\n    <div\n      style={{\n        backgroundImage: backdrop,\n        backgroundSize: 'cover',\n      }}\n    >\n      <Container>\n        <ImgWrapper>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : `${placeholder}`\n            }\n            alt={title}\n            width=\"250\"\n          />\n        </ImgWrapper>\n        <InfoWrapper>\n          <InnerWrapper>\n            <h2>\n              {title}&nbsp;\n              {formattedYear}\n            </h2>\n            {homepage && (\n              <a\n                href={homepage}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                title=\"Go to the official website\"\n              >\n                <BiLinkExternal size={20} />\n              </a>\n            )}\n          </InnerWrapper>\n          {tagline && <i>{tagline}</i>}\n          <div>\n            {release_date && <span>{formattedDate} &#183; </span>}\n            {genresList && <span> {genresList}</span>}\n            {runtime > 0 && <span> &#183; {filmDuration}</span>}\n          </div>\n          <ScoreBar score={score} />\n          <div>\n            <Overview>Overview</Overview>\n            <p>{movieOverview}</p>\n          </div>\n        </InfoWrapper>\n      </Container>\n    </div>\n  );\n}\n\nMovieInfoCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object).isRequired,\n    vote_average: PropTypes.number.isRequired,\n    release_date: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfoCard;\n","export function convertTime(time) {\n  const hours = Math.floor(time / 60);\n  const mins = Math.round(time % 60);\n\n  return `${hours}h ${mins}min`;\n}\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  margin-bottom: 12px;\n`;\n\nexport const StyledBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.spacing(1)};\n  width: 100px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  text-decoration: none;\n  color: inherit;\n  transition: color ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.accent};\n\n    svg {\n      fill: currentColor;\n    }\n  }\n`;\n\nexport const AddInfoWrapper = styled.div`\n  padding: 16px 20px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  text-align: left;\n\n  h3 {\n    font-size: 22px;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  gap: ${p => p.theme.spacing(3)};\n  align-items: center;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  padding: 10px 16px;\n  border-radius: ${p => p.theme.radii.sm};\n  text-decoration: none;\n  font-weight: 700;\n  color: inherit;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  box-shadow: ${p => p.theme.shadow};\n  transition: all ${p => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  &.active {\n    color: ${p => p.theme.colors.light};\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { AiFillLeftSquare } from 'react-icons/ai';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport MovieInfoCard from 'components/MovieDetailsCard/MovieDetailsCard';\nimport Message from 'components/Message/ErrorMessage';\nimport Loader from 'components/Loader';\nimport {\n  AddInfoWrapper,\n  StyledLink,\n  StyledBackLink,\n  List,\n  Container,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchMovieDetails = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedMovieDetails = await moviesAPI.getMovieDetails(\n          movieId,\n          signal\n        );\n        setMovie(fetchedMovieDetails);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails(movieId);\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && (\n        <Message>Oops, something went wrong...Try again later!</Message>\n      )}\n\n      <Container>\n        <StyledBackLink to={backLinkRef.current}>\n          <AiFillLeftSquare size={20} /> Go back\n        </StyledBackLink>\n      </Container>\n\n      {movie && (\n        <>\n          <MovieInfoCard movie={movie} />\n\n          <AddInfoWrapper>\n            <h3>Additional Information</h3>\n            <List>\n              <li>\n                <StyledLink to=\"cast\">Cast</StyledLink>\n              </li>\n              <li>\n                <StyledLink to=\"reviews\">Reviews</StyledLink>\n              </li>\n            </List>\n\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </AddInfoWrapper>\n        </>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function getTrendingMovies(signal) {\n  const response = await axios.get('/trending/movie/day', {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n\nexport async function getMovies(query, signal, page) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=${page}`,\n    {\n      ...options,\n      signal,\n    }\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}`, {\n    ...options,\n    signal,\n  });\n  return response.data;\n}\n\nexport async function getMovieCast(movieId, signal) {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    ...options,\n    signal,\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId, signal) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, {\n    ...options,\n    signal,\n  });\n  return response.data.results;\n}\n"],"names":["Text","styled","namesOfMonth","convertDate","date","newDate","Date","day","getDate","month","getMonth","year","getFullYear","toString","padStart","Container","Filler","Label","score","percent","style","background","p","theme","spacing","InnerWrapper","colors","light","ImgWrapper","radii","sm","InfoWrapper","Overview","movie","poster_path","backdrop_path","title","overview","genres","vote_average","release_date","runtime","tagline","homepage","backdrop","genresList","length","map","genre","name","join","formattedYear","split","formattedDate","movieOverview","filmDuration","time","hours","Math","floor","mins","round","convertTime","backgroundImage","backgroundSize","src","placeholder","alt","width","href","target","rel","size","StyledBackLink","Link","transition","accent","AddInfoWrapper","List","StyledLink","NavLink","shadow","MovieDetails","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","location","useLocation","backLinkRef","useRef","state","from","useEffect","controller","AbortController","signal","fetchMovieDetails","moviesAPI","fetchedMovieDetails","code","abort","Loader","to","current","Suspense","fallback","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","query","page","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}