{"version":3,"file":"static/js/486.bbf11e12.chunk.js","mappings":"mJAUA,IARA,YAAgC,IAAbA,EAAY,EAAZA,SACjB,OAAO,uBAAIA,GACZ,C,+ICqBD,MAvBA,YAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,wBACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAH,IAAOC,OAAAA,OAAP,MAAgB,iBAAhB,EAAkCC,EAAlC,EAAkCA,QAAlC,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,KAQlB,E,SCLc,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IACEH,GAAa,GAEb,IAAMI,EAAiB,mCAAG,WAAMT,GAAN,uFACKU,EAAAA,GAA0BV,GAD/B,OAClBW,EADkB,OAExBR,EAAWQ,GAFa,2CAAH,sDAKvBF,EAAkBT,EAKnB,CAJC,MAAOM,GACPC,GAAS,EACV,CAXD,QAYEF,GAAa,EACd,CACF,GAAE,CAACL,KAGF,gCACGI,IAAa,sCACbE,IACC,SAACM,EAAA,EAAD,4DAEDlB,EAAQmB,OAAS,GAChB,SAAC,EAAD,CAAanB,QAASA,KAEtB,SAACkB,EAAA,EAAD,kCAIP,C,+LC1CKE,EAAU,CACdC,OAAQ,CACNC,QAAS,mCACTC,SAAU,UAKP,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,EAAAA,IAAU,sBAAuBL,GADnD,cACCM,EADD,yBAGEA,EAASC,KAAKC,SAHhB,kEAeA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAyBC,GAAzB,uFACkBL,EAAAA,EAAAA,IAAA,8BACEK,EADF,+BAErBV,GAHG,cACCM,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEA6BA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,uFACkBmB,EAAAA,EAAAA,IAAA,iBAAoBnB,GAAWc,GADjD,cACCM,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1B,GAA5B,uFACkBmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,YAAuCc,GADzD,cACCM,EADD,yBAGEA,EAASC,KAAKM,MAHhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,uFACkBmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,mBAA6Cc,GAD/D,cACCM,EADD,yBAGEA,EAASC,KAAKC,SAHhB,kEAzDPH,EAAAA,EAAAA,SAAAA,QAAA,8B","sources":["components/Message.jsx","components/ReviewsList.jsx","components/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Message({ children }) {\n  return <b>{children}</b>;\n}\n\nMessage.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Message;\n","import PropTypes from 'prop-types';\n\nfunction ReviewsList({ reviews }) {\n  return (\n    <ul>\n      {reviews.map(({ id, author = 'Unknown author', content }) => (\n        <li key={id}>\n          <h3>Author: {author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport ReviewsList from './ReviewsList';\nimport Message from './Message';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n\n      const fetchMovieReviews = async movieId => {\n        const fetchedReviews = await moviesAPI.getMovieReviews(movieId);\n        setReviews(fetchedReviews);\n      };\n\n      fetchMovieReviews(movieId);\n    } catch (error) {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      {error && (\n        <Message>Oops, something went wrong...Try again later!</Message>\n      )}\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        <Message>No reviews yet...</Message>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day', options);\n  // console.log(response.data);\n  return response.data.results;\n}\n\n// export async function getTrendingMovies(controller) {\n//   const response = await axios.get('/trending/movie/day', {\n//     ...options,\n//     signal: controller.signal,\n//   });\n//   // console.log(response.data);\n//   return response.data.results;\n// }\n\nexport async function getMovies(query) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=1`,\n    options\n  );\n  // console.log(response.data);\n  return response.data.results;\n}\n\n// export async function getMovies(query, controller) {\n//   const response = await axios.get(\n//     `/search/movie?query=${query}&include_adult=false&page=1`,\n//     {\n//       ...options,\n//       signal: controller.signal,\n//     }\n//   );\n//   return response.data.results;\n// }\n\n// export async function getMovieDetails(movieId, controller) {\n//   const response = await axios.get(`/movie/${movieId}`, {\n//     ...options,\n//     signal: controller.signal,\n//   });\n//   // console.log(response.data);\n//   return response.data;\n// }\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}`, options);\n  // console.log(response.data);\n  return response.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits`, options);\n  // console.log(response.data);\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, options);\n  // console.log(response.data);\n  return response.data.results;\n}\n"],"names":["children","reviews","map","id","author","content","Reviews","movieId","useParams","useState","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchMovieReviews","moviesAPI","fetchedReviews","Message","length","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}