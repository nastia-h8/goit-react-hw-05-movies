{"version":3,"file":"static/js/781.bb7406de.chunk.js","mappings":"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","sources":["components/Message.jsx","components/MovieInfoCard.jsx","pages/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Message({ children }) {\n  return <b>{children}</b>;\n}\n\nMessage.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Message;\n","import PropTypes from 'prop-types';\nimport placeholder from '../images/placeholder.jpg';\n\nfunction MovieInfoCard({ movie }) {\n  const { poster_path, title, overview, genres, vote_average } = movie;\n\n  const genresList =\n    genres.length > 0\n      ? genres.map(genre => genre.name).join(', ')\n      : 'No genres provided';\n  const score = vote_average ? Math.round((vote_average / 10) * 100) + '%' : 0;\n\n  return (\n    <div>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n            : `${placeholder}`\n        }\n        alt={title}\n      />\n      <h2>{title}</h2>\n      <p>Score: {score}</p>\n      <div>\n        <b>Overview</b>\n        <p>{overview ? overview : 'No overview yet...'}</p>\n      </div>\n      <div>\n        <b>Genres</b>\n        <p>{genresList}</p>\n      </div>\n    </div>\n  );\n}\n\nMovieInfoCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object).isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfoCard;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useParams, Link, useLocation } from 'react-router-dom';\n\nimport * as moviesAPI from 'services/movies-api';\n\nimport MovieInfoCard from 'components/MovieInfoCard';\nimport Message from 'components/Message';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    // const controller = new AbortController();\n\n    const fetchMovieDetails = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedMovieDetails = await moviesAPI.getMovieDetails(movieId);\n        setMovie(fetchedMovieDetails);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails(movieId);\n\n    return () => {\n      // controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      {error && (\n        <Message>Oops, something went wrong...Try again later!</Message>\n      )}\n      <Link to={backLinkRef.current}>Go back</Link>\n      {movie && (\n        <>\n          <MovieInfoCard movie={movie} />\n\n          <div>\n            <h3>Additional Information</h3>\n            <Link to=\"cast\">Cast</Link>\n            <Link to=\"reviews\">Reviews</Link>\n\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  params: {\n    api_key: '5c432334b8202e077ccc8c7b5fc7d7ab',\n    language: 'en-US',\n  },\n};\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day', options);\n  // console.log(response.data);\n  return response.data.results;\n}\n\n// export async function getTrendingMovies(controller) {\n//   const response = await axios.get('/trending/movie/day', {\n//     ...options,\n//     signal: controller.signal,\n//   });\n//   // console.log(response.data);\n//   return response.data.results;\n// }\n\nexport async function getMovies(query) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=1`,\n    options\n  );\n  // console.log(response.data);\n  return response.data.results;\n}\n\n// export async function getMovies(query, controller) {\n//   const response = await axios.get(\n//     `/search/movie?query=${query}&include_adult=false&page=1`,\n//     {\n//       ...options,\n//       signal: controller.signal,\n//     }\n//   );\n//   return response.data.results;\n// }\n\n// export async function getMovieDetails(movieId, controller) {\n//   const response = await axios.get(`/movie/${movieId}`, {\n//     ...options,\n//     signal: controller.signal,\n//   });\n//   // console.log(response.data);\n//   return response.data;\n// }\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}`, options);\n  // console.log(response.data);\n  return response.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits`, options);\n  // console.log(response.data);\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?page=1`, options);\n  // console.log(response.data);\n  return response.data.results;\n}\n"],"names":["children","movie","poster_path","title","overview","genres","vote_average","genresList","length","map","genre","name","join","score","Math","round","src","placeholder","alt","MovieDetails","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMovieDetails","moviesAPI","fetchedMovieDetails","code","Message","to","current","Suspense","options","params","api_key","language","getTrendingMovies","axios","response","data","results","getMovies","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}